{"title":"Summarizing Categorical Data","markdown":{"yaml":{"title":"Summarizing Categorical Data","author":"Jose Toledo Luna","toc":true,"date":"October 27, 2023"},"headingText":"Single categorical variable","containsRefs":false,"markdown":"\n\n```{r, echo=FALSE}\nbirth_dat <- read.csv(file=\"/Users/toledo60/Desktop/Projects/ucla-stats13/data/births.csv\")\n```\n\n\nWe will use the `births` data set to summarize and visualize categorical variables using the *base R* approach\n\n\nCategorical data is a type of data that is divided into categories or groups, such as hair color or education level. Categorical data can be further divided into *nominal data*, which is data that has no inherent order, such as hair color, and *ordinal data*, which is data that has a defined order, such as education level\n\n\n\n\nOne way to extract all the character columns is using both `Filter` and `is.character` functions. A similar argument can be said for any columns that are factors, but instead we'd use `is.factor`. \n\nBelow are the first five rows of all the character columns in `birth_dat`\n\n```{r,eval=FALSE}\nFilter(is.character,birth_dat)\n```\n\n```{r,echo=FALSE}\nFilter(is.character,birth_dat) |> head(5)\n```\n\nThe names of the character columns can be obtained using `colnames()` function in combination with the above statement\n\n```{r}\ncolnames(Filter(is.character,birth_dat) )\n```\n\n\nWe will only consider the `Hispmom` variable from our dataset to demonstrate methods to summarize and visualize a character variable.\n\nFirst, we'll save the values from `Hispmom` column into a separate variable and compute several categorical summaries\n\n\n```{r}\nhispanic_mom <- birth_dat$Hispmom\n```\n\nThe `table()` function in R can be used to quickly create frequency tables.\n\n```{r}\ntable(hispanic_mom)\n```\n\nFrom the above frequency table we observe there were 25 mom who were Mexican, 1693 non Hispanic, and 84 were other types of Hispanic. We can easily convert the frequency table into a frequency table of proportions using `prop.table()`. The input for `prop.table()` is a table created using `table()`.\n\n```{r}\nprop.table(table(hispanic_mom))\n```\n\nNow, we observe roughly 10.79% of moms were Mexican, 84.99% were non Hispanic and 4.22% were other types of Hispanic. Note that all of the proportions should add up to 1. \n\n```{r}\nsum(prop.table(table(hispanic_mom)))\n```\n\n\nWhile the above method works, it is not the only way to obtain frequency tables. We can obtain the same results using `tally()` from the `mosaic` library.\n\n```{r,message=FALSE}\nmosaic::tally(hispanic_mom)\n```\n\nIf we want frequency tables of proportions, we need to use the argument `format` and specify `format = 'proportion'`. There are other formats such as `'count'`, `'percent'` etc.. for more details run `?mosaicCore::tally()`\n\n```{r}\nmosaic::tally(hispanic_mom,format='proportion')\n```\n\nTo plot a single categorical variable we can use `barplot()`. The input for `barplot()` when dealing with categorical data is a `table`, like the ones we created above\n\n```{r}\nbarplot(table(hispanic_mom))\n```\n\nInstead of the frequency counts, we can plot frequency of proportions by inputting a frequency tables of proportions. \n\n```{r}\nbarplot(prop.table(table(hispanic_mom)),\n        main = 'Ethnicity Proportions of Moms',\n        col = '#d59cdb')\n```\n\n\n## Two categorical variables\n\nFor this example, we consider the following two character variables `Hispdad` and `Habit`. `Hispdad` determines whether the father of the baby was Hispanic or not. In particular, are they Mexican, non-Hispanic, or other type of Hispanic ethnicity. `Habit` determines whether or not the subject had a smoking habit or not.\n\nWhen dealing with two categorical variables we can create a two-way table using `table(v1,v2)`. Below is the table of frequency for both `Habit` and `Hispdad`.\n\n*Note: We save the table as a variable so we can use it later*\n\n```{r}\nsmoker_hispanic_dad <- table(birth_dat$Habit,birth_dat$Hispdad)\nsmoker_hispanic_dad\n```\n\nFrom the above frequency table of counts you will notice that there were 184 Mexican dads who were non-smokers, 5 Mexican dads who were smokers, 1236 non-Hispanics who were non-smokers, 117 non-Hispanics who were smokers and similar interpretations can be made for the remaining cells.\n\nWe can obtain a table of proportions using `prop.table()`\n\n```{r}\nprop.table(smoker_hispanic_dad)\n```\n\n\nNow, lets plot the results of our table using the default `barplot` settings\n\n```{r}\nbarplot(smoker_hispanic_dad)\n```\n\nIt is difficult to understand the meaning of the black and gray filled sections of the barplot. Although we may have a general understanding that the gray portion represents smokers and the black portion represents non-smokers based on the accompanying table, we should not assume that the reader will automatically make this connection.\n\nWe can add a legend by using the argument `legend.text=TRUE`, and `barplot` will use the row names of our table to make the legend. Moreover, we add appropriate labels to our plot\n\n```{r}\nbarplot(smoker_hispanic_dad,\n        legend.text = TRUE,\n        xlab = 'Ethnicity',\n        ylab = 'Counts')\n```\n\n\nThe above figure shows a stacked bar plot. If we wanted the bars next to each other, rather than on top of each other, we can use the argument `beside=TRUE`. \n\n\n```{r}\nbarplot(smoker_hispanic_dad,\n        legend.text = TRUE,\n        beside = TRUE,\n        xlab = 'Ethnicity',\n        ylab = 'Counts')\n```\n\n\nIt is evident that the number of non-smokers exceeds that of smokers across all ethnicities. However, we may be able to obtain a more comprehensive understanding of the data by altering the grouping order of the bars. Specifically, we should examine which ethnic group has a higher count for each smoking category.\n\n\nWe can change the order of our table by taking the *transpose*, that is we swap the columns and rows. In R, we can transpose any table-like object using the function `t()`\n\n```{r}\nt(smoker_hispanic_dad)\n```\n\nFrom this point of view, we can observe the number of counts in each smoking habit category for each ethnicity. For example, there were 184 Mexican fathers who are non-smokers and 5 Mexican fathers that did smoke. Similar, interpretations can be made for other ethnic groups.\n\nWe can now use `barplot` on this new transposed table\n\n```{r}\nbarplot(t(smoker_hispanic_dad),\n        legend.text = TRUE,\n        beside = TRUE,\n        xlab = 'Smoking Habit',\n        ylab = 'Counts')\n```\n\nWe can clearly see the non-Hispanic fathers make up the highest counts for non-smokers and smokers. While the default color palette is color-blind friendly it can be hard to distinguish the categories based on these colors. \n\n\nWith a quick google search of  \"four color palettes\" you can find great palettes for 4 categories. For example, the following color palette was obtain from [colorhunt.co](https://colorhunt.co)\n\n```{r}\nbarplot(t(smoker_hispanic_dad),\n        legend.text = TRUE,\n        col =c('#4E6E81','#F9DBBB','#FF0303','#2E3840'),\n        beside = TRUE,\n        xlab = 'Smoking Habit',\n        ylab = 'Counts')\n```\n\n","srcMarkdownNoYaml":"\n\n```{r, echo=FALSE}\nbirth_dat <- read.csv(file=\"/Users/toledo60/Desktop/Projects/ucla-stats13/data/births.csv\")\n```\n\n\nWe will use the `births` data set to summarize and visualize categorical variables using the *base R* approach\n\n\nCategorical data is a type of data that is divided into categories or groups, such as hair color or education level. Categorical data can be further divided into *nominal data*, which is data that has no inherent order, such as hair color, and *ordinal data*, which is data that has a defined order, such as education level\n\n\n\n## Single categorical variable\n\nOne way to extract all the character columns is using both `Filter` and `is.character` functions. A similar argument can be said for any columns that are factors, but instead we'd use `is.factor`. \n\nBelow are the first five rows of all the character columns in `birth_dat`\n\n```{r,eval=FALSE}\nFilter(is.character,birth_dat)\n```\n\n```{r,echo=FALSE}\nFilter(is.character,birth_dat) |> head(5)\n```\n\nThe names of the character columns can be obtained using `colnames()` function in combination with the above statement\n\n```{r}\ncolnames(Filter(is.character,birth_dat) )\n```\n\n\nWe will only consider the `Hispmom` variable from our dataset to demonstrate methods to summarize and visualize a character variable.\n\nFirst, we'll save the values from `Hispmom` column into a separate variable and compute several categorical summaries\n\n\n```{r}\nhispanic_mom <- birth_dat$Hispmom\n```\n\nThe `table()` function in R can be used to quickly create frequency tables.\n\n```{r}\ntable(hispanic_mom)\n```\n\nFrom the above frequency table we observe there were 25 mom who were Mexican, 1693 non Hispanic, and 84 were other types of Hispanic. We can easily convert the frequency table into a frequency table of proportions using `prop.table()`. The input for `prop.table()` is a table created using `table()`.\n\n```{r}\nprop.table(table(hispanic_mom))\n```\n\nNow, we observe roughly 10.79% of moms were Mexican, 84.99% were non Hispanic and 4.22% were other types of Hispanic. Note that all of the proportions should add up to 1. \n\n```{r}\nsum(prop.table(table(hispanic_mom)))\n```\n\n\nWhile the above method works, it is not the only way to obtain frequency tables. We can obtain the same results using `tally()` from the `mosaic` library.\n\n```{r,message=FALSE}\nmosaic::tally(hispanic_mom)\n```\n\nIf we want frequency tables of proportions, we need to use the argument `format` and specify `format = 'proportion'`. There are other formats such as `'count'`, `'percent'` etc.. for more details run `?mosaicCore::tally()`\n\n```{r}\nmosaic::tally(hispanic_mom,format='proportion')\n```\n\nTo plot a single categorical variable we can use `barplot()`. The input for `barplot()` when dealing with categorical data is a `table`, like the ones we created above\n\n```{r}\nbarplot(table(hispanic_mom))\n```\n\nInstead of the frequency counts, we can plot frequency of proportions by inputting a frequency tables of proportions. \n\n```{r}\nbarplot(prop.table(table(hispanic_mom)),\n        main = 'Ethnicity Proportions of Moms',\n        col = '#d59cdb')\n```\n\n\n## Two categorical variables\n\nFor this example, we consider the following two character variables `Hispdad` and `Habit`. `Hispdad` determines whether the father of the baby was Hispanic or not. In particular, are they Mexican, non-Hispanic, or other type of Hispanic ethnicity. `Habit` determines whether or not the subject had a smoking habit or not.\n\nWhen dealing with two categorical variables we can create a two-way table using `table(v1,v2)`. Below is the table of frequency for both `Habit` and `Hispdad`.\n\n*Note: We save the table as a variable so we can use it later*\n\n```{r}\nsmoker_hispanic_dad <- table(birth_dat$Habit,birth_dat$Hispdad)\nsmoker_hispanic_dad\n```\n\nFrom the above frequency table of counts you will notice that there were 184 Mexican dads who were non-smokers, 5 Mexican dads who were smokers, 1236 non-Hispanics who were non-smokers, 117 non-Hispanics who were smokers and similar interpretations can be made for the remaining cells.\n\nWe can obtain a table of proportions using `prop.table()`\n\n```{r}\nprop.table(smoker_hispanic_dad)\n```\n\n\nNow, lets plot the results of our table using the default `barplot` settings\n\n```{r}\nbarplot(smoker_hispanic_dad)\n```\n\nIt is difficult to understand the meaning of the black and gray filled sections of the barplot. Although we may have a general understanding that the gray portion represents smokers and the black portion represents non-smokers based on the accompanying table, we should not assume that the reader will automatically make this connection.\n\nWe can add a legend by using the argument `legend.text=TRUE`, and `barplot` will use the row names of our table to make the legend. Moreover, we add appropriate labels to our plot\n\n```{r}\nbarplot(smoker_hispanic_dad,\n        legend.text = TRUE,\n        xlab = 'Ethnicity',\n        ylab = 'Counts')\n```\n\n\nThe above figure shows a stacked bar plot. If we wanted the bars next to each other, rather than on top of each other, we can use the argument `beside=TRUE`. \n\n\n```{r}\nbarplot(smoker_hispanic_dad,\n        legend.text = TRUE,\n        beside = TRUE,\n        xlab = 'Ethnicity',\n        ylab = 'Counts')\n```\n\n\nIt is evident that the number of non-smokers exceeds that of smokers across all ethnicities. However, we may be able to obtain a more comprehensive understanding of the data by altering the grouping order of the bars. Specifically, we should examine which ethnic group has a higher count for each smoking category.\n\n\nWe can change the order of our table by taking the *transpose*, that is we swap the columns and rows. In R, we can transpose any table-like object using the function `t()`\n\n```{r}\nt(smoker_hispanic_dad)\n```\n\nFrom this point of view, we can observe the number of counts in each smoking habit category for each ethnicity. For example, there were 184 Mexican fathers who are non-smokers and 5 Mexican fathers that did smoke. Similar, interpretations can be made for other ethnic groups.\n\nWe can now use `barplot` on this new transposed table\n\n```{r}\nbarplot(t(smoker_hispanic_dad),\n        legend.text = TRUE,\n        beside = TRUE,\n        xlab = 'Smoking Habit',\n        ylab = 'Counts')\n```\n\nWe can clearly see the non-Hispanic fathers make up the highest counts for non-smokers and smokers. While the default color palette is color-blind friendly it can be hard to distinguish the categories based on these colors. \n\n\nWith a quick google search of  \"four color palettes\" you can find great palettes for 4 categories. For example, the following color palette was obtain from [colorhunt.co](https://colorhunt.co)\n\n```{r}\nbarplot(t(smoker_hispanic_dad),\n        legend.text = TRUE,\n        col =c('#4E6E81','#F9DBBB','#FF0303','#2E3840'),\n        beside = TRUE,\n        xlab = 'Smoking Habit',\n        ylab = 'Counts')\n```\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"fig-align":"center","engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"reference-location":"document","output-file":"04-intro_categorical_variables.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","theme":["sandstone","../assets/styles.scss"],"published-title":"class date","code-summary":"","title":"Summarizing Categorical Data","author":"Jose Toledo Luna","date":"October 27, 2023"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}