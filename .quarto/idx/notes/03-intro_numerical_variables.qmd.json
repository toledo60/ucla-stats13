{"title":"Summarizing Numerical Data","markdown":{"yaml":{"title":"Summarizing Numerical Data","author":"Jose Toledo Luna","toc":true,"date":"October 27, 2023"},"headingText":"Single numerical variable","containsRefs":false,"markdown":"\n\nWe will use the `births` data set to summarize and visualize numerical variables using the *base R* approach \n\n\n```{r, echo=FALSE}\nbirth_dat <- read.csv(file=\"/Users/toledo60/Desktop/Projects/ucla-stats13/data/births.csv\")\n```\n\nNumerical data refers to data that can be measured and expressed as a number, such as age, height, weight, and temperature. Numerical data can be *discrete* or *continuous*\n\n\n\n\nOne way to extract all the numerical columns is using both `Filter` and `is.numeric` functions. Below are the first five rows of all the numerical columns in `birth_dat`\n\n```{r,eval=FALSE}\nFilter(is.numeric,birth_dat)\n```\n\n```{r,echo=FALSE}\nFilter(is.numeric,birth_dat) |> head(5)\n```\n\nThe names of the numerical columns can be obtained using `colnames()` function in combination with the above statement\n\n```{r}\ncolnames(Filter(is.numeric,birth_dat) )\n```\n\nWe will only consider the `weight` variable from our dataset to demonstrate methods to summarize and visualize a numerical variable.\n\nFunctions for numerical summaries include, but not limited to,\n\n| Function    |                                    Description                                     |\n|-------------|:----------------------------------------------------------------------------------:|\n| `mean()`    |                                        mean                                        |\n| `median()`  |                                       median                                       |\n| `mode()`    |                                        mode                                        |\n| `sd()`      |                                 standard deviation                                 |\n| `var()`     |                                      variance                                      |\n| `min()`     |                                      minimum                                       |\n| `max()`     |                                      maximum                                       |\n| `summary()` | Computes the following: *Minimum ,1st Quartile, Median,Mean ,3rd Quartile,Maximum* |\n\nNext, we'll save the values from `weight` column into a separate variable and compute several numerical summaries listed above\n\n```{r}\nbirth_weight <- birth_dat$weight\n```\n\n\n```{r}\nmean(birth_weight)\nmedian(birth_weight)\nmin(birth_weight)\nmax(birth_weight)\n```\n\n```{r}\nsummary(birth_weight)\n```\n\nWhile `summary()` give us a quick numerical summary of our distribution, it is important to also visualize the overall distribution using a plot such as a boxplot\n\n```{r}\nboxplot(birth_weight)\n```\n\nor a histogram\n\n```{r}\nhist(birth_weight)\n```\n\nFrom the histogram above, while the overall distribution of the birth weights is symmetrical there are outliers causing the distribution to be skewed to the left. \n\nFor `boxplot()` and `hist()` we used the default settings, while they are informative we can alter their appearance to be more professional.\n\nFor example, we changed the x-axis label and y-axis label using `xlab`,`ylab` arguments,respectively. We changed the title with `main` and the color of the boxplot with `col`. The `col` argument can take values such as `red`,`blue` or any HEX code, see `?boxplot` for further customization. \n\n```{r}\nboxplot(birth_weight,\n        main='Boxplot of Birth Weights',\n        xlab ='birth weights', ylab='ounces',\n        col='#61b1ed')\n```\n\n:::callout-tip\nSearch 'color picker' in Google and copy/paste the generated hex code\n:::\n\nWe can apply similar customization to our histogram\n\n```{r}\nhist(birth_weight,\n     main='Histogram of Birth Weights',\n     xlab ='birth weights',\n     col='#d1584f',\n     breaks=20)\n```\n\nThe `hist` function uses the Sturges method by default to determine the number of `breaks` on the histogram. We can manually change the number of breaks, but we should be careful not to specify a low or high number of breaks. Usually the default setting is appropriate for most scenarios. \n\n\n## Two numerical variables\n\nWe consider the following two numerical variables: `Feduc` and `Meduc`, which is the highest education for fathers and mothers in this dataset, respectively.\n\n```{r}\nfather_eduction <- birth_dat$Feduc\nmother_education <- birth_dat$Meduc\n```\n\n\nWe can compare their distributions in a single plot as we did in *Section 2* with boxplots\n\n```{r}\nboxplot(father_eduction,mother_education,\n        names = c('father','mother'),\n        col=c('#f5d376','#f5767c'),\n        main = 'Highest Education for Parernts',\n        ylab = 'Year')\n```\n\nFor boxplots its pretty straight forward to compare two numerical distributions using the syntax `boxplot(v1,v2,...)`. For histograms it requires a bit more work.\n\nWe start by creating a histogram for the first variable, then creating another histogram for the second variable but using the argument `add=TRUE`. We must specify a unique color for each histogram representing the variables. In order for both of the histograms to fit properly on the same plot we must take into account the lowest and highest values among the multiple numerical variables. \n\n```{r}\nlow_x <- min(father_eduction,mother_education)\nhigh_x <- max(father_eduction,mother_education)\n```\n\nLastly, we must specify a legend to appropriately distinguish the multiple histograms using the function `legend()`. \n\n```{r}\nhist(father_eduction, col='lightcoral',\n     xlim=c(low_x,high_x),\n     main='Education for Parents', xlab='Year')\nhist(mother_education, col='lightblue', add=TRUE)\nlegend('topright', legend = c('father', 'mother'), \n       fill=c('lightcoral', 'lightblue'))\n```\n\n\n:::callout-warning\nWhen using `legend()` it is important that you specify the correct ordering of colors for each group, otherwise the legend would be incorrect. For example, in our first histogram we chose \"lightcoral\" to represent \"father\" and \"lightblue\" to represent \"mother\" distributions.\nWhich is why we used the arguments: \n`legend=c('father','mother'), fill = c('lightcoral','lightblue')` in that order\n:::\n\nWe can also consider a *scatter plot* to visualize the relationship between two numerical variables. We consider the two numerical variables `Gained` and `weight`. `Gained` describes the weight gained during the pregnancy term and `weight` describe the weight of the baby at birth.\n\n```{r}\nplot(x = birth_dat$Gained,y = birth_dat$weight,\n     main = 'Baby weight vs pregnancy weight gain',\n     xlab = 'weight gained during pregnancy',\n     ylab = 'Baby weight (oz.)',\n     col='lightcoral')\n```\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\nWe will use the `births` data set to summarize and visualize numerical variables using the *base R* approach \n\n\n```{r, echo=FALSE}\nbirth_dat <- read.csv(file=\"/Users/toledo60/Desktop/Projects/ucla-stats13/data/births.csv\")\n```\n\nNumerical data refers to data that can be measured and expressed as a number, such as age, height, weight, and temperature. Numerical data can be *discrete* or *continuous*\n\n\n## Single numerical variable\n\n\nOne way to extract all the numerical columns is using both `Filter` and `is.numeric` functions. Below are the first five rows of all the numerical columns in `birth_dat`\n\n```{r,eval=FALSE}\nFilter(is.numeric,birth_dat)\n```\n\n```{r,echo=FALSE}\nFilter(is.numeric,birth_dat) |> head(5)\n```\n\nThe names of the numerical columns can be obtained using `colnames()` function in combination with the above statement\n\n```{r}\ncolnames(Filter(is.numeric,birth_dat) )\n```\n\nWe will only consider the `weight` variable from our dataset to demonstrate methods to summarize and visualize a numerical variable.\n\nFunctions for numerical summaries include, but not limited to,\n\n| Function    |                                    Description                                     |\n|-------------|:----------------------------------------------------------------------------------:|\n| `mean()`    |                                        mean                                        |\n| `median()`  |                                       median                                       |\n| `mode()`    |                                        mode                                        |\n| `sd()`      |                                 standard deviation                                 |\n| `var()`     |                                      variance                                      |\n| `min()`     |                                      minimum                                       |\n| `max()`     |                                      maximum                                       |\n| `summary()` | Computes the following: *Minimum ,1st Quartile, Median,Mean ,3rd Quartile,Maximum* |\n\nNext, we'll save the values from `weight` column into a separate variable and compute several numerical summaries listed above\n\n```{r}\nbirth_weight <- birth_dat$weight\n```\n\n\n```{r}\nmean(birth_weight)\nmedian(birth_weight)\nmin(birth_weight)\nmax(birth_weight)\n```\n\n```{r}\nsummary(birth_weight)\n```\n\nWhile `summary()` give us a quick numerical summary of our distribution, it is important to also visualize the overall distribution using a plot such as a boxplot\n\n```{r}\nboxplot(birth_weight)\n```\n\nor a histogram\n\n```{r}\nhist(birth_weight)\n```\n\nFrom the histogram above, while the overall distribution of the birth weights is symmetrical there are outliers causing the distribution to be skewed to the left. \n\nFor `boxplot()` and `hist()` we used the default settings, while they are informative we can alter their appearance to be more professional.\n\nFor example, we changed the x-axis label and y-axis label using `xlab`,`ylab` arguments,respectively. We changed the title with `main` and the color of the boxplot with `col`. The `col` argument can take values such as `red`,`blue` or any HEX code, see `?boxplot` for further customization. \n\n```{r}\nboxplot(birth_weight,\n        main='Boxplot of Birth Weights',\n        xlab ='birth weights', ylab='ounces',\n        col='#61b1ed')\n```\n\n:::callout-tip\nSearch 'color picker' in Google and copy/paste the generated hex code\n:::\n\nWe can apply similar customization to our histogram\n\n```{r}\nhist(birth_weight,\n     main='Histogram of Birth Weights',\n     xlab ='birth weights',\n     col='#d1584f',\n     breaks=20)\n```\n\nThe `hist` function uses the Sturges method by default to determine the number of `breaks` on the histogram. We can manually change the number of breaks, but we should be careful not to specify a low or high number of breaks. Usually the default setting is appropriate for most scenarios. \n\n\n## Two numerical variables\n\nWe consider the following two numerical variables: `Feduc` and `Meduc`, which is the highest education for fathers and mothers in this dataset, respectively.\n\n```{r}\nfather_eduction <- birth_dat$Feduc\nmother_education <- birth_dat$Meduc\n```\n\n\nWe can compare their distributions in a single plot as we did in *Section 2* with boxplots\n\n```{r}\nboxplot(father_eduction,mother_education,\n        names = c('father','mother'),\n        col=c('#f5d376','#f5767c'),\n        main = 'Highest Education for Parernts',\n        ylab = 'Year')\n```\n\nFor boxplots its pretty straight forward to compare two numerical distributions using the syntax `boxplot(v1,v2,...)`. For histograms it requires a bit more work.\n\nWe start by creating a histogram for the first variable, then creating another histogram for the second variable but using the argument `add=TRUE`. We must specify a unique color for each histogram representing the variables. In order for both of the histograms to fit properly on the same plot we must take into account the lowest and highest values among the multiple numerical variables. \n\n```{r}\nlow_x <- min(father_eduction,mother_education)\nhigh_x <- max(father_eduction,mother_education)\n```\n\nLastly, we must specify a legend to appropriately distinguish the multiple histograms using the function `legend()`. \n\n```{r}\nhist(father_eduction, col='lightcoral',\n     xlim=c(low_x,high_x),\n     main='Education for Parents', xlab='Year')\nhist(mother_education, col='lightblue', add=TRUE)\nlegend('topright', legend = c('father', 'mother'), \n       fill=c('lightcoral', 'lightblue'))\n```\n\n\n:::callout-warning\nWhen using `legend()` it is important that you specify the correct ordering of colors for each group, otherwise the legend would be incorrect. For example, in our first histogram we chose \"lightcoral\" to represent \"father\" and \"lightblue\" to represent \"mother\" distributions.\nWhich is why we used the arguments: \n`legend=c('father','mother'), fill = c('lightcoral','lightblue')` in that order\n:::\n\nWe can also consider a *scatter plot* to visualize the relationship between two numerical variables. We consider the two numerical variables `Gained` and `weight`. `Gained` describes the weight gained during the pregnancy term and `weight` describe the weight of the baby at birth.\n\n```{r}\nplot(x = birth_dat$Gained,y = birth_dat$weight,\n     main = 'Baby weight vs pregnancy weight gain',\n     xlab = 'weight gained during pregnancy',\n     ylab = 'Baby weight (oz.)',\n     col='lightcoral')\n```\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"message":false,"fig-align":"center","engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"scroll","code-link":true,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"reference-location":"document","output-file":"03-intro_numerical_variables.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","theme":["sandstone","../assets/styles.scss"],"published-title":"class date","code-summary":"","title":"Summarizing Numerical Data","author":"Jose Toledo Luna","date":"October 27, 2023"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}