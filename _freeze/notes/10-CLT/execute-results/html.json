{
  "hash": "abf16ff23d46afbdabc0cfd50f5bcf3b",
  "result": {
    "markdown": "---\nauthor: Jose Toledo Luna\ndate: October 27, 2023\ntitle: Introduction to Central Limit Theorem\ntoc: true\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(palmerpenguins)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_set(theme_bw())\ntheme_replace(panel.grid.minor = element_blank(),\n              panel.grid.major = element_blank())\n```\n:::\n\n\n\n\n## Sampling Distributions\n\n### Sample mean\n\nThe sampling distribution of the sample mean is the theoretical distribution of means that would result from taking all possible samples of size $n$ from the population.\n\nSuppose we are sampling from a population which comes from a standard Normal distribution such that observations in our sample are *iid (independent, identically distributed)*. Each sample of size $n$ will then consists of realizations $\\{x_1,\\dots,x_n\\}$, such that each $x_i$ will be a realization of the random variable $X_i \\sim N(0,1)$\n\nTo obtain the sampling distribution for the sample mean,\n\nFor the total number of samples do the following:\n\n(1) Generate a random sample of size $n$ from the population\n(2) Compute the sample mean and store the result in a variable, say `sample_means`\n(3) Plot each of the `sample_means` using a histogram\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 10000\nsample_size <- 100 # each sample will be of size 100\nsample_means <- numeric(n_samples)\n\nfor(i in 1:n_samples){\n  sample_i =  rnorm(n = sample_size, mean = 0, sd=1) # generate a new sample\n  sample_means[i] = mean(sample_i) # obtain mean for each sample\n}\n```\n:::\n\n\n<details>\n<summary>Show Code</summary>\n\n::: {.cell}\n\n```{.r .cell-code}\nsampling_dist <- ggplot(data.frame(sample_means),aes(sample_means))+\n  geom_histogram(fill = 'steelblue',alpha = 0.3,\n                 color = 'black',bins=30)+\n  labs(title = 'Sampling distribution',\n       x = 'Sample means',y = '')\n```\n:::\n\n</details>\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-CLT_files/figure-html/unnamed-chunk-5-1.png){width=576}\n:::\n:::\n\n\nThe plot above is the distribution of sample means after taking 10,000 samples with size $n=100$ from the population. The overall distribution appears to be normally distributed *(bell shaped curve)*.\n\n\nThe **Central Limit Theorem** *(CLT)* states that if you have a population with mean $\\mu$ and standard deviation $\\sigma$ and take sufficiently large random samples from the population with replacement, then the distribution of the sample means *(sampling distribution)* will be approximately normally distributed with mean $\\mu$ and standard error $\\frac{\\sigma}{\\sqrt{n}}$. Note, the standard deviation of the sampling distribution of the sample mean *(or any other statistic)* is referred to as the *standard error*.\n\nRecall, the population is distributed as a standard normal distribution, i.e $N(\\mu=0,\\sigma=1)$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(sample_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] -0.0003984072\n```\n:::\n:::\n\nwhich is very close to the population mean of $\\mu =0$\n\n\nwith standard error \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(sample_means)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.1005629\n```\n:::\n:::\n\n\nwhich is approximately $\\frac{\\sigma}{\\sqrt{n}} = \\frac{1}{10}$\n\nBelow is a demonstration of how increasing the sample size affects the distribution of the sample mean and seeing *CLT* in action\n\n<details>\n<summary>Show Code</summary>\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 100\nsample_means <- numeric(n_samples)\n\nfor(i in 1:n_samples){\n  sample_i =  rnorm(n = n_samples, mean = 0, sd=1) # generate a new sample\n  sample_means[i] = mean(sample_i) # obtain mean for each sample\n}\n\nsample_mean <- round(mean(sample_means),3)\nstandard_error <- round(sd(sample_means),3)\n\nsampling_dist100 <- ggplot(data.frame(sample_means),aes(sample_means))+\n  geom_histogram(fill = 'steelblue',alpha = 0.3,\n                 color = 'black',bins=30)+\n  labs(title = 'Sampling distribution',\n       x = 'Sample means',y = '',\n       subtitle = paste0('mean=',sample_mean,\n                         ', standard error=',standard_error))+\n  facet_grid(~100)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 1000\nsample_means <- numeric(n_samples)\n\nfor(i in 1:n_samples){\n  sample_i =  rnorm(n = n_samples, mean = 0, sd=1) # generate a new sample\n  sample_means[i] = mean(sample_i) # obtain mean for each sample\n}\n\nsample_mean <- round(mean(sample_means),3)\nstandard_error <- round(sd(sample_means),3)\n\nsampling_dist1000 <- ggplot(data.frame(sample_means),aes(sample_means))+\n  geom_histogram(fill = 'steelblue',alpha = 0.3,\n                 color = 'black',bins=30)+\n  labs(title = 'Sampling distribution',\n       x = 'Sample means',y = '',\n       subtitle = paste0('mean=',sample_mean,\n                         ', standard error=',standard_error))+\n  facet_grid(~1000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 5000\nsample_means <- numeric(n_samples)\n\nfor(i in 1:n_samples){\n  sample_i =  rnorm(n = n_samples, mean = 0, sd=1) # generate a new sample\n  sample_means[i] = mean(sample_i) # obtain mean for each sample\n}\n\nsample_mean <- round(mean(sample_means),3)\nstandard_error <- round(sd(sample_means),3)\n\nsampling_dist5000 <- ggplot(data.frame(sample_means),aes(sample_means))+\n  geom_histogram(fill = 'steelblue',alpha = 0.3,\n                 color = 'black',bins=30)+\n  labs(title = 'Sampling distribution',\n       x = 'Sample means',y = '',\n       subtitle = paste0('mean=',sample_mean,\n                         ', standard error=',standard_error))+\n  facet_grid(~5000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 10000\nsample_means <- numeric(n_samples)\n\nfor(i in 1:n_samples){\n  sample_i =  rnorm(n = n_samples, mean = 0, sd=1) # generate a new sample\n  sample_means[i] = mean(sample_i) # obtain mean for each sample\n}\n\nsample_mean <- round(mean(sample_means),3)\nstandard_error <- round(sd(sample_means),3)\n\nsampling_dist10000 <- ggplot(data.frame(sample_means),aes(sample_means))+\n  geom_histogram(fill = 'steelblue',alpha = 0.3,\n                 color = 'black',bins=30)+\n  labs(title = 'Sampling distribution',\n       x = 'Sample means',y = '',\n       subtitle = paste0('mean=',sample_mean,\n                         ', standard error=',standard_error))+\n  facet_grid(~10000)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nplots <- sampling_dist100 + sampling_dist1000 + sampling_dist5000 +\n  sampling_dist10000 + plot_layout(nrow=2, ncol=2)\n```\n:::\n\n\n</details>\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-CLT_files/figure-html/unnamed-chunk-13-1.png){width=864}\n:::\n:::\n\n\n\nTo interactively visualize how the sampling distribution of the \nsample mean builds up one sample at a time and see when the Central Limit Theorem start to kick in, I highly recommend the [art of stats](https://artofstat.com/web-apps) sampling distributions and Central Limit Theorem web applications.\n\n\n### Application: Sample Mean\n\nNow we will apply the the concepts of generating a sampling distribution for the sample mean using a real world dataset. In particular, we will use the `penguins` dataset from the `palmerpenguins` package.\n\nUsing the penguins dataset we will generate a sampling distribution for the sample mean of the penguins' body mass *(grams)*\n\nFor simplicity, we will remove any missing observations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbody_mass_g <- penguins$body_mass_g[!is.na(penguins$body_mass_g)]\n```\n:::\n\n\nRecall, to obtain the sampling distribution for the sample mean, do the following process\n\nFor the total number of samples do the following:\n\n(1) Generate a random sample of size $n$ from the population, `penguins$body_mass_g`\n(2) Compute the sample mean of the penguins body mass and store the result in a variable, say `body_mass_xbar`\n(3) Plot each of the `body_mass_xbar` using a histogram\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 10000\nsample_size <- 50\n\nbody_mass_xbar <- numeric(n_samples)\n\nfor(i in 1:n_samples){\n  sample_i =  sample(body_mass_g, size = sample_size) # generate a new sample\n  body_mass_xbar[i] = mean(sample_i) # obtain mean for each sample\n}\n```\n:::\n\n\n<details>\n<summary>Show Code</summary>\n\n::: {.cell}\n\n```{.r .cell-code}\nsampling_dist <- ggplot(data.frame(body_mass_xbar),\n                        aes(body_mass_xbar))+\n  geom_histogram(fill = 'steelblue',alpha = 0.3,\n                 color = 'black',bins=30)+\n  labs(title = 'Sampling distribution of Sample Mean',\n       subtitle = 'Penguins body mass (grams)',\n       x = 'Sample means',y = '')\n```\n:::\n\n</details>\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-CLT_files/figure-html/unnamed-chunk-17-1.png){width=576}\n:::\n:::\n\n\nThe mean for the sampling distribution is\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(body_mass_xbar)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 4201.269\n```\n:::\n:::\n\n\nwhich is approximately the population mean for the penguins body mass *(without missing observations)*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(body_mass_g)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 4201.754\n```\n:::\n:::\n\n\nthe standard error for the sampling distribution is\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(body_mass_xbar)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 105.2723\n```\n:::\n:::\n\n\n\n\n\n### Sample proportions\n\nThe idea behind generating a sampling distribution for sample proportions is very similar to the procedure described in [Sample means](#sample-mean) section.\n\nTo obtain the sampling distribution for the sample proportions;\n\nFor the total number of samples do the following:\n\n(1) Generate a random sample of size $n$ from the population\n(2) Compute the sample proportion and store the result in a variable, say `sample_proportions`\n(3) Plot each of the `sample_proportions` using a histogram\n\nHere the sample proportion is the fraction of samples which were success. We will take a large number of random samples from the population, where the population is generated from a binomial distribution with 10 trials and probability of success $p=0.25$ for each trial.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 10000\nsample_size <- 100 # each sample will be of size 100\nn_trials <- 10\nsample_proportions <- numeric(n_samples)\n\nfor(i in 1:n_samples){\n  sample_i =  rbinom(n = sample_size, size= n_trials, \n                     prob = 0.25) # generate a new sample\n  sample_proportions[i] = mean(sample_i)/n_trials # obtain proportion for each sample\n}\n```\n:::\n\n\n<details>\n<summary>Show Code</summary>\n\n::: {.cell}\n\n```{.r .cell-code}\nsampling_dist_prop <- ggplot(data.frame(sample_proportions),\n                             aes(sample_proportions))+\n  geom_histogram(fill = 'steelblue',alpha = 0.3,\n                 color = 'black',bins=30)+\n  labs(title = 'Sampling distribution',\n       x = 'Sample proportions',y = '')\n```\n:::\n\n</details>\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-CLT_files/figure-html/unnamed-chunk-23-1.png){width=576}\n:::\n:::\n\n\nThe plot above is the distribution of sample proportions after taking 10,000 samples with size $n=100$ from the population. The overall distribution appears to be normally distributed *(bell shaped curve)*.\n\n\nThrough the *CLT*, the sampling distribution for the sample proportions will be distributed with mean $p$ and standard error $\\sqrt{\\frac{p(1-p)}{n}}$, $\\hat{p} \\sim N(p,\\sqrt{\\frac{p(1-p)}{n}} )$\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(sample_proportions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.2501959\n```\n:::\n:::\n\n\nwhich is approximately the population parameter $p=0.25$.\n\nThe standard error is \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(sample_proportions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.01370153\n```\n:::\n:::\n\n\n\n\n### Application: Sample proportion\n\n\nUsing the penguins dataset we will generate a sampling distribution for the sample proportion of the Adelie penguins\n\nFor simplicity, we will remove any missing observations\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspecies <- penguins$species[!is.na(penguins$species)]\n```\n:::\n\n\nRecall, to obtain the sampling distribution for the sample proportion\n\nFor the total number of samples do the following:\n\n(1) Generate a random sample of size $n$ from the population, `penguins$species` *(without missing observations)*\n(2) Compute the sample proportion of the penguins Adelie species and store the result in a variable, say `adelie_proportions`\n(3) Plot each of the `adelie_proportions` using a histogram\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_samples <- 10000\nsample_size <- 50\n\nadelie_proportions <- numeric(n_samples)\n\nfor(i in 1:n_samples){\n  sample_i =  sample(species, size = sample_size) # generate a new sample from the population\n  adelie_proportions[i] = mean(sample_i == 'Adelie') # obtain proportion for each sample\n}\n```\n:::\n\n\n<details>\n<summary>Show Code</summary>\n\n::: {.cell}\n\n```{.r .cell-code}\nsampling_dist <- ggplot(data.frame(adelie_proportions),\n                        aes(adelie_proportions))+\n  geom_bar(fill = 'steelblue',alpha = 0.3,\n                 color = 'black')+\n  labs(title = 'Sampling distribution of Sample Proportion',\n       subtitle = \"Adelie penguins\",\n       x = 'Sample proportions',y = '')\n```\n:::\n\n</details>\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](10-CLT_files/figure-html/unnamed-chunk-29-1.png){width=576}\n:::\n:::\n\n\nThe mean for the sampling distribution is\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(adelie_proportions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.442826\n```\n:::\n:::\n\n\nwhich is approximately the population proportion for the Adelie penguins *(without missing observations)*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.table(table(species))['Adelie']\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>    Adelie \n#> 0.4418605\n```\n:::\n:::\n\n\nthe standard error for the sampling distribution is\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(adelie_proportions)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#> [1] 0.0654046\n```\n:::\n:::\n\n\nwhich should approximately be $\\sqrt{\\frac{p(1-p)}{n}}$\n\n\n::: {.cell}\n\n```{.r .cell-code}\np <- prop.table(table(species))['Adelie']\nsqrt((p*(1-p))/sample_size)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n#>     Adelie \n#> 0.07023102\n```\n:::\n:::\n",
    "supporting": [
      "10-CLT_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}